---
import BaseLayout from "../layouts/BaseLayout.astro";
import resources from "../data/resources.json";
import Footer from "../sections/Footer.astro";
import Header from "../sections/Header.astro";

const pageData = {
    title: "Recursos externos - Infohack",
    description:
        "Explora una selecci√≥n de recursos externos sobre ciberseguridad: canales de YouTube, cursos, herramientas y comunidades recomendadas.",
};

const categories = ["Todos", "YouTube", "Cursos", "Documentaci√≥n", "Noticias"];
const languages = ["Todos", "es", "en"];

// Obtener tags √∫nicos desde JSON
const allTags = Array.from(new Set(resources.flatMap((r) => r.tags))).sort();

const currentPath = Astro.url.pathname;
---

<BaseLayout title={pageData.title} description={pageData.description}>
    <!-- Navegaci√≥n -->
    <Header currentPath={currentPath} />

    <main
        class="min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 py-12"
    >
        <section class="container mx-auto px-4 max-w-7xl">
            <h1 class="text-4xl font-bold text-gray-900 mb-6">
                Recursos externos
            </h1>
            <p class="text-lg text-gray-700 mb-8 leading-relaxed">
                En esta secci√≥n encontrar√°s <span
                    class="text-green-700 font-semibold"
                    >recursos de confianza</span
                > para seguir aprendiendo sobre ciberseguridad. Todos los enlaces
                externos son compartidos con fines educativos y pertenecen a sus
                respectivos autores.
            </p>

            <!-- Filtros de categor√≠a -->
            <h2 class="text-lg font-semibold text-gray-800 mb-2">
                Filtrar por categor√≠a
            </h2>
            <div class="flex flex-wrap gap-3 mb-6">
                {
                    categories.map((cat) => (
                        <button
                            class="filter-btn px-4 py-2 text-sm font-medium rounded-lg border border-gray-300 hover:bg-green-50 hover:text-black hover:border-green-600 transition-colors cursor-pointer"
                            data-category={cat}
                        >
                            {cat}
                        </button>
                    ))
                }
            </div>

            <!-- Filtro por idioma -->
            <h2 class="text-lg font-semibold text-gray-800 mb-2">
                Filtrar por idioma
            </h2>
            <div class="flex flex-wrap gap-3 mb-6">
                {
                    languages.map((lang) => (
                        <button
                            class="lang-btn px-4 py-2 text-sm font-medium rounded-lg border border-gray-300 hover:bg-green-50 hover:border-green-600 transition-colors cursor-pointer"
                            data-language={lang}
                        >
                            {lang === "Todos"
                                ? "Todos los idiomas"
                                : lang === "es"
                                  ? "Espa√±ol"
                                  : "Ingl√©s"}
                        </button>
                    ))
                }
            </div>

            <!-- Dropdown de tags -->
            <h2 class="text-lg font-semibold text-gray-800 mb-2">
                Filtrar por etiquetas
            </h2>
            <div class="mb-10">
                <select
                    id="tag-select"
                    class="w-full md:w-1/2 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-600 focus:outline-none"
                >
                    <option value="Todos">Todas las etiquetas</option>
                    {allTags.map((tag) => <option value={tag}>{tag}</option>)}
                </select>
            </div>

            <!-- Buscador -->
            <div class="mb-10">
                <input
                    type="text"
                    id="search-input"
                    placeholder="üîç Buscar recurso..."
                    class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-600 focus:outline-none"
                />
            </div>

            <!-- Contenedor de recursos -->
            <div
                id="resources-container"
                class="grid md:grid-cols-2 lg:grid-cols-3 gap-8"
            >
                {
                    resources.map((res) => (
                        <article
                            class="resource-card bg-white border border-gray-200 rounded-xl shadow-sm hover:shadow-md transition-shadow p-6 flex flex-col justify-between"
                            data-category={res.category}
                            data-title={res.title.toLowerCase()}
                            data-description={res.description.toLowerCase()}
                            data-language={res.language}
                            data-tags={res.tags.join(",").toLowerCase()}
                        >
                            <div>
                                <h2 class="text-xl font-semibold text-gray-800 mb-2">
                                    {res.title}
                                </h2>
                                <p class="text-sm text-gray-600 mb-4">
                                    {res.description}
                                </p>
                            </div>
                            <div class="mt-auto">
                                <p class="text-xs text-gray-500 mb-3">
                                    Fuente: {res.author} ¬∑ {res.category} ¬∑
                                    Idioma:{" "}
                                    {res.language === "es"
                                        ? "Espa√±ol"
                                        : "Ingl√©s"}
                                </p>
                                <div class="flex flex-wrap gap-2 mb-3">
                                    {res.tags.map((tag) => (
                                        <span class="bg-green-100 text-green-700 text-xs px-2 py-1 rounded-full">
                                            {tag}
                                        </span>
                                    ))}
                                </div>
                                <a
                                    href={res.url}
                                    target="_blank"
                                    rel="noopener noreferrer"
                                    class="inline-block bg-green-600 hover:bg-green-700 text-white text-sm font-medium px-4 py-2 rounded-lg transition-colors"
                                >
                                    Visitar recurso ‚Üí
                                </a>
                            </div>
                        </article>
                    ))
                }
            </div>
        </section>
    </main>

    <!-- Footer -->
    <Footer />

    <!-- Script de filtrado -->
    <script is:inline>
        const buttons = document.querySelectorAll(".filter-btn");
        const langButtons = document.querySelectorAll(".lang-btn");
        const tagSelect = document.getElementById("tag-select");
        const cards = document.querySelectorAll(".resource-card");
        const searchInput = document.getElementById("search-input");

        let activeCategory = "Todos";
        let activeLanguage = "Todos";
        let activeTag = "Todos";

        function filterResources() {
            const query = searchInput.value.toLowerCase();

            cards.forEach((card) => {
                const matchesCategory =
                    activeCategory === "Todos" ||
                    card.dataset.category === activeCategory;
                const matchesLanguage =
                    activeLanguage === "Todos" ||
                    card.dataset.language === activeLanguage;
                const matchesTag =
                    activeTag === "Todos" ||
                    card.dataset.tags.includes(activeTag.toLowerCase());
                const matchesSearch =
                    card.dataset.title.includes(query) ||
                    card.dataset.description.includes(query);

                if (
                    matchesCategory &&
                    matchesLanguage &&
                    matchesTag &&
                    matchesSearch
                ) {
                    card.classList.remove("hidden");
                } else {
                    card.classList.add("hidden");
                }
            });
        }

        buttons.forEach((btn) => {
            btn.addEventListener("click", () => {
                activeCategory = btn.dataset.category;
                buttons.forEach((b) =>
                    b.classList.remove("bg-green-300", "text-black", "border-green-600"),
                );
                btn.classList.add("bg-green-300", "text-black", "border-green-600");
                filterResources();
            });
        });

        langButtons.forEach((btn) => {
            btn.addEventListener("click", () => {
                activeLanguage = btn.dataset.language;
                langButtons.forEach((b) =>
                    b.classList.remove("bg-green-300", "text-black", "border-green-600"),
                );
                btn.classList.add("bg-green-300", "text-black", "border-green-600");
                filterResources();
            });
        });

        tagSelect.addEventListener("change", () => {
            activeTag = tagSelect.value;
            filterResources();
        });

        searchInput.addEventListener("input", filterResources);

        // Estado inicial
        if (buttons[0]) buttons[0].classList.add("bg-green-300", "text-black", "border-green-600");
        if (langButtons[0])
            langButtons[0].classList.add("bg-green-300", "text-black", "border-green-600");
    </script>
</BaseLayout>
