---
export interface Props {
  type?: 'warning' | 'danger' | 'info' | 'success';
  title?: string;
  children?: any;
}

const { type = 'warning', title } = Astro.props;

const alertStyles = {
  warning: {
    container: 'bg-amber-50 border-l-4 border-amber-400',
    icon: '‚ö†Ô∏è',
    iconColor: 'text-amber-600',
    titleColor: 'text-amber-800',
    textColor: 'text-amber-700'
  },
  danger: {
    container: 'bg-red-50 border-l-4 border-red-400',
    icon: 'üö®',
    iconColor: 'text-red-600',
    titleColor: 'text-red-800',
    textColor: 'text-red-700'
  },
  info: {
    container: 'bg-blue-50 border-l-4 border-blue-400',
    icon: '‚ÑπÔ∏è',
    iconColor: 'text-blue-600',
    titleColor: 'text-blue-800',
    textColor: 'text-blue-700'
  },
  success: {
    container: 'bg-green-50 border-l-4 border-green-400',
    icon: '‚úÖ',
    iconColor: 'text-green-600',
    titleColor: 'text-green-800',
    textColor: 'text-green-700'
  }
};

const styles = alertStyles[type];
---

<div class={`${styles.container} p-6 rounded-r-lg mb-6`}>
  <div class="flex items-start">
    <div class={`text-2xl mr-4 ${styles.iconColor}`}>
      {styles.icon}
    </div>
    <div class="flex-1">
      {title && (
        <h4 class={`font-semibold mb-2 ${styles.titleColor}`}>
          {title}
        </h4>
      )}
      <div class={`${styles.textColor} leading-relaxed`}>
        <slot />
      </div>
    </div>
  </div>
</div>
