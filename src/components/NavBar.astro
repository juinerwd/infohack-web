---
export interface Props {
  currentPath?: string;
}

const { currentPath = '' } = Astro.props;

const navItems = [
  { name: 'Inicio', href: '/', icon: 'üè†' },
  { name: 'Protege tus datos', href: '/guides', icon: 'üõ°Ô∏è' },
  { name: 'Aprende', href: '/tutorials', icon: 'üéì' },
  { name: 'Noticias', href: '/news', icon: 'üì∞' },
  { name: 'Recursos', href: '/resources', icon: 'üîó' },
  { name: 'Contacto', href: '/contact', icon: 'üìß' },
];

const isActive = (path: string) => currentPath === path || (path !== '/' && currentPath.startsWith(path));
---

<nav class="bg-white shadow-sm border-b sticky top-0 z-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex items-center justify-between h-16">
      <!-- Logo -->
      <div class="flex items-center">
        <a href="/" class="flex items-center space-x-2">
          <span class="text-2xl">üõ°Ô∏è</span>
          <span class="text-xl font-bold text-slate-800">Infohack</span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-4">
          {navItems.map(item => (
            <a
              href={item.href}
              class={`text-gray-700 hover:text-green-700 px-3 py-2 text-sm font-medium transition-colors ${isActive(item.href) ? 'text-green-700 bg-green-50 rounded-md' : ''}`}
            >
              <span class="mr-1">{item.icon}</span>
              {item.name}
            </a>
          ))}
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="mobile-menu-button inline-flex items-center justify-center p-2 rounded-md text-gray-700 hover:text-green-700 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-green-500"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Abrir men√∫ principal</span>
          <!-- Icon when menu is closed -->
          <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div class="mobile-menu hidden md:hidden" id="mobile-menu">
      <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t">
        {navItems.map(item => (
          <a
            href={item.href}
            class={`block px-3 py-2 rounded-md text-base font-medium transition-colors ${
              isActive(item.href) 
                ? 'text-green-700 bg-green-50' 
                : 'text-gray-700 hover:text-green-700 hover:bg-gray-100'
            }`}
          >
            <span class="mr-2">{item.icon}</span>
            {item.name}
          </a>
        ))}
      </div>
    </div>
  </div>
</nav>

<script>
  // Toggle mobile menu
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.querySelector('.mobile-menu-button');
    const menu = document.querySelector('.mobile-menu');
    
    if (button && menu) {
      button.addEventListener('click', () => {
        const isExpanded = button.getAttribute('aria-expanded') === 'true';
        button.setAttribute('aria-expanded', (!isExpanded).toString());
        menu.classList.toggle('hidden');
      });
    }
  });
</script>
